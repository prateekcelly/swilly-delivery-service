// Code generated by MockGen. DO NOT EDIT.
// Source: swilly-delivery-service/internal/app/server (interfaces: Enqueuer)

// Package server is a generated GoMock package.
package server

import (
	reflect "reflect"

	work "github.com/gocraft/work"
	gomock "github.com/golang/mock/gomock"
)

// MockEnqueuer is a mock of Enqueuer interface.
type MockEnqueuer struct {
	ctrl     *gomock.Controller
	recorder *MockEnqueuerMockRecorder
}

// MockEnqueuerMockRecorder is the mock recorder for MockEnqueuer.
type MockEnqueuerMockRecorder struct {
	mock *MockEnqueuer
}

// NewMockEnqueuer creates a new mock instance.
func NewMockEnqueuer(ctrl *gomock.Controller) *MockEnqueuer {
	mock := &MockEnqueuer{ctrl: ctrl}
	mock.recorder = &MockEnqueuerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEnqueuer) EXPECT() *MockEnqueuerMockRecorder {
	return m.recorder
}

// Enqueue mocks base method.
func (m *MockEnqueuer) Enqueue(arg0 string, arg1 map[string]interface{}) (*work.Job, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Enqueue", arg0, arg1)
	ret0, _ := ret[0].(*work.Job)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Enqueue indicates an expected call of Enqueue.
func (mr *MockEnqueuerMockRecorder) Enqueue(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Enqueue", reflect.TypeOf((*MockEnqueuer)(nil).Enqueue), arg0, arg1)
}
